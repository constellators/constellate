'use strict';

/* eslint-disable no-console */

module.exports = function gracefullyShutdown(shutdown, name) {
  var shuttingDown = false;

  var gracefulShutdown = function gracefulShutdown() {
    if (shuttingDown) {
      return;
    }
    shuttingDown = true;

    console.log(`üíÄ Received kill signal, attempting to shut down ${name}...`);

    shutdown().then(function () {
      console.log(`‚úÖ ${name} gracefully shut down.`);
      process.exit(0);
    }).catch(function (err) {
      console.log(`‚ùå ${name} did not shut down gracefully`);
      console.error(err.message);
      process.exit(1);
    });

    setTimeout(function () {
      console.error(`‚ùóÔ∏è Graceful shutdown period lapsed for ${name}, forcefully shutting down.`);
      process.exit();
    }, 10 * 1000);
  }

  // listen for TERM signal .e.g. kill
  ;['SIGINT', 'SIGTERM'].forEach(function (signal) {
    return process.on(signal, gracefulShutdown);
  });
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdyYWNlZnVsbHlTaHV0ZG93bi5qcyJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwiZ3JhY2VmdWxseVNodXRkb3duIiwic2h1dGRvd24iLCJuYW1lIiwic2h1dHRpbmdEb3duIiwiZ3JhY2VmdWxTaHV0ZG93biIsImNvbnNvbGUiLCJsb2ciLCJ0aGVuIiwicHJvY2VzcyIsImV4aXQiLCJjYXRjaCIsImVyciIsImVycm9yIiwibWVzc2FnZSIsInNldFRpbWVvdXQiLCJmb3JFYWNoIiwib24iLCJzaWduYWwiXSwibWFwcGluZ3MiOiI7O0FBQUE7O0FBRUFBLE9BQU9DLE9BQVAsR0FBaUIsU0FBU0Msa0JBQVQsQ0FBNEJDLFFBQTVCLEVBQXNDQyxJQUF0QyxFQUE0QztBQUMzRCxNQUFJQyxlQUFlLEtBQW5COztBQUVBLE1BQU1DLG1CQUFtQixTQUFuQkEsZ0JBQW1CLEdBQU07QUFDN0IsUUFBSUQsWUFBSixFQUFrQjtBQUNoQjtBQUNEO0FBQ0RBLG1CQUFlLElBQWY7O0FBRUFFLFlBQVFDLEdBQVIsQ0FBYSxvREFBbURKLElBQUssS0FBckU7O0FBRUFELGVBQ0dNLElBREgsQ0FDUSxZQUFNO0FBQ1ZGLGNBQVFDLEdBQVIsQ0FBYSxLQUFJSixJQUFLLHdCQUF0QjtBQUNBTSxjQUFRQyxJQUFSLENBQWEsQ0FBYjtBQUNELEtBSkgsRUFLR0MsS0FMSCxDQUtTLFVBQUNDLEdBQUQsRUFBUztBQUNkTixjQUFRQyxHQUFSLENBQWEsS0FBSUosSUFBSywrQkFBdEI7QUFDQUcsY0FBUU8sS0FBUixDQUFjRCxJQUFJRSxPQUFsQjtBQUNBTCxjQUFRQyxJQUFSLENBQWEsQ0FBYjtBQUNELEtBVEg7O0FBV0FLLGVBQVcsWUFBTTtBQUNmVCxjQUFRTyxLQUFSLENBQWUsMENBQXlDVixJQUFLLDZCQUE3RDtBQUNBTSxjQUFRQyxJQUFSO0FBQ0QsS0FIRCxFQUdHLEtBQUssSUFIUjtBQUlEOztBQUVEO0FBekJBLEdBMEJDLENBQUMsUUFBRCxFQUFXLFNBQVgsRUFBc0JNLE9BQXRCLENBQThCO0FBQUEsV0FBVVAsUUFBUVEsRUFBUixDQUFXQyxNQUFYLEVBQW1CYixnQkFBbkIsQ0FBVjtBQUFBLEdBQTlCO0FBQ0YsQ0E5QkQiLCJmaWxlIjoiZ3JhY2VmdWxseVNodXRkb3duLmpzIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9zZWFuL0RldmVsb3BtZW50L2N0cmxwbHVzYi9jb25zdGVsbGF0ZS9wcm9qZWN0cy9jb25zdGVsbGF0ZS11dGlscyIsInNvdXJjZXNDb250ZW50IjpbIi8qIGVzbGludC1kaXNhYmxlIG5vLWNvbnNvbGUgKi9cblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBncmFjZWZ1bGx5U2h1dGRvd24oc2h1dGRvd24sIG5hbWUpIHtcbiAgbGV0IHNodXR0aW5nRG93biA9IGZhbHNlXG5cbiAgY29uc3QgZ3JhY2VmdWxTaHV0ZG93biA9ICgpID0+IHtcbiAgICBpZiAoc2h1dHRpbmdEb3duKSB7XG4gICAgICByZXR1cm5cbiAgICB9XG4gICAgc2h1dHRpbmdEb3duID0gdHJ1ZVxuXG4gICAgY29uc29sZS5sb2coYPCfkoAgUmVjZWl2ZWQga2lsbCBzaWduYWwsIGF0dGVtcHRpbmcgdG8gc2h1dCBkb3duICR7bmFtZX0uLi5gKVxuXG4gICAgc2h1dGRvd24oKVxuICAgICAgLnRoZW4oKCkgPT4ge1xuICAgICAgICBjb25zb2xlLmxvZyhg4pyFICR7bmFtZX0gZ3JhY2VmdWxseSBzaHV0IGRvd24uYClcbiAgICAgICAgcHJvY2Vzcy5leGl0KDApXG4gICAgICB9KVxuICAgICAgLmNhdGNoKChlcnIpID0+IHtcbiAgICAgICAgY29uc29sZS5sb2coYOKdjCAke25hbWV9IGRpZCBub3Qgc2h1dCBkb3duIGdyYWNlZnVsbHlgKVxuICAgICAgICBjb25zb2xlLmVycm9yKGVyci5tZXNzYWdlKVxuICAgICAgICBwcm9jZXNzLmV4aXQoMSlcbiAgICAgIH0pXG5cbiAgICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoYOKdl++4jyBHcmFjZWZ1bCBzaHV0ZG93biBwZXJpb2QgbGFwc2VkIGZvciAke25hbWV9LCBmb3JjZWZ1bGx5IHNodXR0aW5nIGRvd24uYClcbiAgICAgIHByb2Nlc3MuZXhpdCgpXG4gICAgfSwgMTAgKiAxMDAwKVxuICB9XG5cbiAgLy8gbGlzdGVuIGZvciBURVJNIHNpZ25hbCAuZS5nLiBraWxsXG4gIDtbJ1NJR0lOVCcsICdTSUdURVJNJ10uZm9yRWFjaChzaWduYWwgPT4gcHJvY2Vzcy5vbihzaWduYWwsIGdyYWNlZnVsU2h1dGRvd24pKVxufVxuIl19